#!/bin/bash
#
# Note: run this script once in the top level directory if a new .h file
# is added to regenerate {src,phg_tcl,p4est}/Makefile.dep.
#
# $Id: makedeps,v 1.7 2021/12/08 07:02:42 zlb Exp $
#

process_deps () {
    local src f files
    src="$1"
    if $2; then
	if ! test -r "$src" -a "${src#\.\./include/}" = "$src"; then
	    src="../include/$src"
	fi
	test -r "$src" || return
	echo " $src"
    fi
    files=`grep '^#[ ]*include *"' "$src" | awk -F\" '{print $2}'`
    for f in $files; do
	process_deps "$f" true
    done
}

# cd to top level directory
cd `dirname $0`/..

echo 1>&2 "Clean up auxiliary files ..."
make -s clean >/dev/null 2>&1 || true

for d in p4est phg_tcl src; do
  echo 1>&2 "Processing in $d ..."
  cd $d || continue
  echo "# Dependecies generated by makedeps. Don't edit!!!" >Makefile.dep
  ###for f in *.c vtkPhgData.cxx; do
  for f in *.c *.cxx *.cpp *.c++; do
    test -r "$f" || continue
    test "$f" = "refine.c" -o "$f" = "coarsen.c" && continue
    echo ""
    echo -n "${f%\.*}.o: $f "
    echo `process_deps "$f" false | sort -u`
#    if test "$f" = spc.c; then
#	# perform partial linking on spc.o
#	echo "	\$(CC) \$(CFLAGS) -c $f"
#	echo "	\$(LD) -r -o tmp.o spc.o ${SPC_DIR}/lib/libspc.a"
#	echo "	/bin/mv -f tmp.o spc.o"
#    fi
  done >> Makefile.dep
  test $d = "." || cd ..
done

echo 1>&2 "Done."
