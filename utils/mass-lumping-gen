#!/bin/bash
#
# This script creates the file "mass-lumping.inc" defining the "TST*" types.
#
# $Id: mass-lumping-gen,v 1.5 2022/09/02 01:00:14 zlb Exp $

partition () {
    # lists all cases of partitioning $order into sum of at most 4 integers
    local i j k
    for ((i = 0; i <= order; i++)); do
	for ((j = i; j <= order - i; j++)); do
	    for ((k = j; k <= order-i-j-k; k++)); do
		echo $((order-i-j-k)) $k $j $i | sed -e "s/ 0.*$//g"
	    done
	done
    done
}

get_star () {
    # processes coordinates in the cmdline and returns the Cons or Perm macro
    local star arg i j
    if test "$#" -lt 4; then star="Cons"; else star="Perm"; fi
    # set ${count[$i]} := the number of occurrences of $i in the arguments
    for ((i = 0; i <= order; i++)); do count[$i]="0"; done
    while test -n "$1"; do
	count[$1]=$((count[$1] + 1))
	shift
    done
    # form star and arguments
    args=""
    for ((i = order; i > 0; i--)); do
	for ((j = 0; j <= order; j++)); do
	    test ${count[$j]} -ne $i && continue
	    star=$star${count[$j]}
	    test -n "$args" && args="$args,"
	    args="$args$j"
	done
    done
    # remove the last argument
    args=`echo $args | sed -e 's/,[0-9]*$//'`
    echo "$star ($args)" | awk '{printf "%-8s%s\n", $1, $2}'
}

TST_gen () {
    # generate code of a given order */
    local i order
    if test $# -ne 1; then
        echo 1>&2 "Usage: TST_gen order"
        exit 1
    fi
    
    order="$1"
    
    cat <<END
/*--------------------------------------------------------------------------*/
/* Order $order Lagrangian basis */
#define PermOne $order
END
    
    ORBITS=""
    POINTS="#define POINTS	"
    N=`partition $order | wc -l`
    i=0
    partition $order | (
        while true; do
            read orbit || break
            star=`get_star $orbit`
            i=$((i + 1))
            if test $i -lt $N; then
		star="$star,"
		backslash=" \\"
	    else
		backslash=""
	    fi
            star_len=`echo -n $star | wc -c`
            if test $((star_len/8)) -lt 2; then
		tabs="		"
	    else
		tabs="	"
	    fi
            case `echo $orbit | wc -w` in
		1) type="vert" ;;
		2) type="edge" ;;
		3) type="face" ;;
		4) type="elem" ;;
            esac
            # remove spaces and change 10->'A', 11->'B', etc., in $orbit
            orbit=`echo $orbit | sed -e 's/10/A/g' -e 's/11/B/g' -e 's/12/C/g' \
				     -e 's/13/D/g' -e 's/14/E/g' -e 's/15/F/g' \
				     -e 's/16/G/g' -e 's/ //g'`
            echo "$POINTS$star$tabs/* $type: $orbit */$backslash"
            POINTS="		"
            test -n "$ORBITS" && ORBITS="$ORBITS,"
            ORBITS="$ORBITS`echo $star \
		| sed -e 's/Cons\|Perm/S/' -e 's/ *(.*),*//g'`"
        done
        
        cat <<END
#define WEIGHTS	-1.0			/* no weights */
#define ORBITS	$ORBITS
#define BASES	-1
DEFINE_ML_TYPE($order, $order, $order, $order, TST$order, NULL)
#undef BASES
#undef WEIGHTS
#undef POINTS
#undef ORBITS
#undef PermOne
END
    )
}

cat <<END
/*---------------------------------------------------------------------------*/
/* This file was generated by the script utils/mass-lumping-gen. DON'T EDIT! */
/*---------------------------------------------------------------------------*/
#undef _F
#undef PermC
#undef PermOne
#undef PermHalf
#undef PermThree

#define _F(a)		(a)
#define PermC(a)	(a)
#define PermHalf	(PermOne/2)
#define PermThree	3

END

for ((i = 1; i <= 16; i++)); do
    TST_gen $i
done
